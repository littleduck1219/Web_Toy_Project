{"ast":null,"code":"var _jsxFileName = \"/Users/gyeongdeokpark/Desktop/01.GitHub/littleduck1219.github.io/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Router } from \"./Router\";\nimport { app } from \"firebaseApp\";\nimport { getAuth } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const auth = getAuth(app);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!(auth !== null && auth !== void 0 && auth.currentUser));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"2xPjH5ry4rFuk3T2DQAPCXQ7HPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Router","app","getAuth","useState","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","auth","isAuthenticated","setIsAuthenticated","currentUser","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gyeongdeokpark/Desktop/01.GitHub/littleduck1219.github.io/src/App.tsx"],"sourcesContent":["import { Router } from \"./Router\";\nimport { app } from \"firebaseApp\";\nimport { getAuth } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst App = () => {\n\tconst auth = getAuth(app);\n\tconst [isAuthenticated, setIsAuthenticated] = useState<boolean>(!!auth?.currentUser);\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer />\n\t\t\t<Router isAuthenticated={isAuthenticated} />\n\t\t</>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,GAAG,QAAQ,aAAa;AACjC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAe,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,IAAI,GAAGT,OAAO,CAACD,GAAG,CAAC;EACzB,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAU,CAAC,EAACQ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,WAAW,EAAC;EACpF,oBACCR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACCT,OAAA,CAACF,cAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBb,OAAA,CAACN,MAAM;MAACY,eAAe,EAAEA;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3C,CAAC;AAEL,CAAC;AAACT,EAAA,CATID,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAWT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}